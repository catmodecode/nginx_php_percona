version: '3.2'

services:
  nginx:
    image: nginx:1.19.2-alpine
    container_name: flonginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./www:/var/www
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/locations.conf:/etc/nginx/locations.conf
      - ./etc/nginx/ssl_redirect.conf:/etc/nginx/ssl_redirect.conf
      - ./etc/nginx/cert.conf:/etc/nginx/cert.conf
      - ./etc/nginx/cmc_com.conf:/etc/nginx/cmc_com.conf
      - ./etc/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./etc/nginx/tools-enabled:/etc/nginx/tools-enabled
      - ./etc/nginx/ssl:/etc/nginx/ssl
      - ./log/nginx_log:/var/log/nginx
    depends_on:
      - php

  php:
    build: ./builder/php
    container_name: flophp
#    user: 1000:1000
    volumes:
      - ./www:/var/www
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini
      - ./etc/php/conf.d/:/usr/local/etc/php/conf.d/
      - ./log/profiler_log:/var/log/phpprofiler
    links:
      - db
      - redis
    environment:
      XDEBUG_CONFIG: "remote_host=${LOCAL_IP} client_host=${LOCAL_IP} remote_port=9000 remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"

  composer:
    image: "composer"
    container_name: flocomposer
    volumes:
      - ./www:/app
    command: bash -c "cd /app/int-flomarket.com && composer install"
    depends_on:
      - php

  db:
    image: postgres:13.1-alpine
    shm_size: 1g
    container_name: flodb
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always
    env_file:
      - ".env"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./etc/db/my-postgres.conf:/etc/postgresql/postgresql.conf

  dbadmin:
    image: dpage/pgadmin4:4.28
    container_name: flodbadmin
    env_file:
      - ".env"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PROXY_X_FOR_COUNT: 2
      PROXY_X_PROTO_COUNT: 1
      PROXY_X_HOST_COUNT: 1
      PROXY_X_PORT_COUNT: 2
      PROXY_X_PREFIX_COUNT: 1
    volumes:
      - ./etc/nginx-selfsigned.crt:/certs/server.cert
      - ./etc/nginx-selfsigned.key:/certs/server.key
      - ./etc/pgadmin/servers.json:/pgadmin4/servers.json
      - ./etc/pgadmin/pgpassfile:/pgadmin4/pgpassfile
    
  redis:
    image: redis:6.0.6
    container_name: floredis
    restart: always
    volumes:
      - ./data/redisdb:/data

  redis-commander:
    container_name: floredis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379

  rabbitmq:
    build: ./builder/rabbitmq
    container_name: florabbitmq
    env_file:
      - ".env"
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: always
    depends_on:
      - php

  mail:
    container_name: flomail
    restart: unless-stopped
    image: eaudeweb/mailtrap
    environment:
      - MT_USER=${MT_USER}
      - MT_PASSWD=${MT_PASSWD}
      - MT_MAILBOX_LIMIT=${MT_MAILBOX_LIMIT}
      - MT_MESSAGE_LIMIT=${MT_MESSAGE_LIMIT}

  cron:
    container_name: flocron
    privileged: true
    restart: unless-stopped
    build: ./builder/cron
    volumes:
      - "./data/cron/crontab/root.cron:/var/spool/cron/crontabs/root"
      - "./data/cron/scripts:/cronscripts"
      - "//var/run/docker.sock:/var/run/docker.sock"

  profiler:
    container_name: floprofiler
    restart: unless-stopped
    image: jokkedk/webgrind:latest
    volumes:
      - ./log/profiler_log:/tmp
